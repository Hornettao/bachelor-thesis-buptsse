% This file was created with JabRef 2.9.2.
% Encoding: UTF8

@ARTICLE{Czaplicki:2013:AFR:2499370.2462161,
  author = {Czaplicki, Evan and Chong, Stephen},
  title = {Asynchronous Functional Reactive Programming for GUIs},
  journal = {SIGPLAN Not.},
  year = {2013},
  volume = {48},
  pages = {411--422},
  number = {6},
  month = jun,
  acmid = {2462161},
  address = {New York, NY, USA},
  doi = {10.1145/2499370.2462161},
  issn = {0362-1340},
  issue_date = {June 2013},
  keywords = {functional reactive programming, graphical user interfaces},
  numpages = {12},
  publisher = {ACM},
  url = {http://doi.acm.org/10.1145/2499370.2462161}
}

@ARTICLE{Desai:2013:PSA:2499370.2462184,
  author = {Desai, Ankush and Gupta, Vivek and Jackson, Ethan and Qadeer, Shaz
	and Rajamani, Sriram and Zufferey, Damien},
  title = {P: Safe Asynchronous Event-driven Programming},
  journal = {SIGPLAN Not.},
  year = {2013},
  volume = {48},
  pages = {321--332},
  number = {6},
  month = jun,
  acmid = {2462184},
  address = {New York, NY, USA},
  doi = {10.1145/2499370.2462184},
  issn = {0362-1340},
  issue_date = {June 2013},
  keywords = {device driver, domain-specific language, event-driven programming,
	state machine, systematic testing, verification},
  numpages = {12},
  publisher = {ACM},
  url = {http://doi.acm.org/10.1145/2499370.2462184}
}

@ARTICLE{Elliott:1997:FRA:258949.258973,
  author = {Elliott, Conal and Hudak, Paul},
  title = {Functional Reactive Animation},
  journal = {SIGPLAN Not.},
  year = {1997},
  volume = {32},
  pages = {263--273},
  number = {8},
  month = aug,
  acmid = {258973},
  address = {New York, NY, USA},
  doi = {10.1145/258949.258973},
  issn = {0362-1340},
  issue_date = {Aug. 1997},
  numpages = {11},
  publisher = {ACM},
  url = {http://doi.acm.org/10.1145/258949.258973}
}

@INPROCEEDINGS{Elliott:2009:PFR:1596638.1596643,
  author = {Elliott, Conal M.},
  title = {Push-pull Functional Reactive Programming},
  booktitle = {Proceedings of the 2Nd ACM SIGPLAN Symposium on Haskell},
  year = {2009},
  series = {Haskell '09},
  pages = {25--36},
  address = {New York, NY, USA},
  publisher = {ACM},
  acmid = {1596643},
  doi = {10.1145/1596638.1596643},
  isbn = {978-1-60558-508-6},
  keywords = {concurrency, data-driven, demand-driven, functional reactive programming,
	semantics},
  location = {Edinburgh, Scotland},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/1596638.1596643}
}

@ARTICLE{fielding2002principled,
  author = {Fielding, Roy T and Taylor, Richard N},
  title = {Principled design of the modern Web architecture},
  journal = {ACM Transactions on Internet Technology (TOIT)},
  year = {2002},
  volume = {2},
  pages = {115--150},
  number = {2},
  publisher = {ACM}
}

@ARTICLE{Freeman:2012:HLW:2480361.2371413,
  author = {Freeman, John and J\"{a}rvi, Jaakko and Foust, Gabriel},
  title = {HotDrink: A Library for Web User Interfaces},
  journal = {SIGPLAN Not.},
  year = {2012},
  volume = {48},
  pages = {80--83},
  number = {3},
  month = sep,
  acmid = {2371413},
  address = {New York, NY, USA},
  doi = {10.1145/2480361.2371413},
  issn = {0362-1340},
  issue_date = {March 2013},
  keywords = {MVVM pattern, declarative programming, user interface, web},
  numpages = {4},
  publisher = {ACM},
  url = {http://doi.acm.org/10.1145/2480361.2371413}
}

@INPROCEEDINGS{Gerken:2010:UCM:1753846.1754082,
  author = {Gerken, Jens and Jetter, Hans-Christian and Reiterer, Harald},
  title = {Using Concept Maps to Evaluate the Usability of APIs},
  booktitle = {CHI '10 Extended Abstracts on Human Factors in Computing Systems},
  year = {2010},
  series = {CHI EA '10},
  pages = {3937--3942},
  address = {New York, NY, USA},
  publisher = {ACM},
  acmid = {1754082},
  doi = {10.1145/1753846.1754082},
  isbn = {978-1-60558-930-5},
  keywords = {API usability, concept maps, longitudinal evaluation},
  location = {Atlanta, Georgia, USA},
  numpages = {6},
  url = {http://doi.acm.org/10.1145/1753846.1754082}
}

@ARTICLE{Hughes200067,
  author = {John Hughes},
  title = {Generalising monads to arrows },
  journal = {Science of Computer Programming },
  year = {2000},
  volume = {37},
  pages = {67 - 111},
  number = {1–3},
  doi = {http://dx.doi.org/10.1016/S0167-6423(99)00023-4},
  issn = {0167-6423},
  owner = {trinity},
  timestamp = {2014.05.15},
  url = {http://www.sciencedirect.com/science/article/pii/S0167642399000234}
}

@ARTICLE{Krishnaswami:2012:HFR:2103621.2103665,
  author = {Krishnaswami, Neelakantan R. and Benton, Nick and Hoffmann, Jan},
  title = {Higher-order Functional Reactive Programming in Bounded Space},
  journal = {SIGPLAN Not.},
  year = {2012},
  volume = {47},
  pages = {45--58},
  number = {1},
  month = jan,
  acmid = {2103665},
  address = {New York, NY, USA},
  doi = {10.1145/2103621.2103665},
  issn = {0362-1340},
  issue_date = {January 2012},
  keywords = {bunched implications, dataflow, functional reactive programming, linear
	logic, space-bounded computation},
  numpages = {14},
  publisher = {ACM},
  url = {http://doi.acm.org/10.1145/2103621.2103665}
}

@ARTICLE{Likness2010,
  author = {Jeremy Likness},
  title = {Model-View-ViewModel (MVVM) Explained},
  journal = {Code Project},
  year = {2010},
  month = {August},
  abstract = {The purpose of this post is to provide an introduction to the Model-View-ViewModel
	(MVVM) pattern. While I've participated in lots of discussions online
	about MVVM, it occurred to me that beginners who are learning the
	pattern have very little to go on and a lot of conflicting resources
	to wade through in order to try to implement it in their own code.
	I am not trying to introduce dogma, but wanted to pull together key
	concepts in a single post to make it easy and straightforward to
	understand the value of the pattern and how it can be implemented.
	MVVM is really far simpler than people make it out to be.},
  owner = {trinity},
  timestamp = {2014.05.15},
  url = {http://www.codeproject.com/Articles/100175/Model-View-ViewModel-MVVM-Explained}
}

@INPROCEEDINGS{Nilsson:2002:FRP:581690.581695,
  author = {Nilsson, Henrik and Courtney, Antony and Peterson, John},
  title = {Functional Reactive Programming, Continued},
  booktitle = {Proceedings of the 2002 ACM SIGPLAN Workshop on Haskell},
  year = {2002},
  series = {Haskell '02},
  pages = {51--64},
  address = {New York, NY, USA},
  publisher = {ACM},
  acmid = {581695},
  doi = {10.1145/581690.581695},
  isbn = {1-58113-605-6},
  keywords = {FRP, Haskell, domain-specific languages, functional programming, hybrid
	modeling, synchronous dataflow languages},
  location = {Pittsburgh, Pennsylvania},
  numpages = {14},
  url = {http://doi.acm.org/10.1145/581690.581695}
}

@ARTICLE{Smith2009,
  author = {Josh Smith},
  title = {WPF Apps With The Model-View-ViewModel Design Pattern},
  journal = {MSDN Magazine},
  year = {2009},
  month = {Feburary},
  owner = {trinity},
  timestamp = {2014.05.15},
  url = {http://msdn.microsoft.com/en-us/magazine/dd419663.aspx}
}

@INPROCEEDINGS{Syme:2011:FAP:1946313.1946334,
  author = {Syme, Don and Petricek, Tomas and Lomov, Dmitry},
  title = {The F\# Asynchronous Programming Model},
  booktitle = {Proceedings of the 13th International Conference on Practical Aspects
	of Declarative Languages},
  year = {2011},
  series = {PADL'11},
  pages = {175--189},
  address = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid = {1946334},
  isbn = {978-3-642-18377-5},
  location = {Austin, TX, USA},
  numpages = {15},
  url = {http://dl.acm.org/citation.cfm?id=1946313.1946334}
}

@INPROCEEDINGS{VanRyseghem:2012:SFS:2448963.2448965,
  author = {Van Ryseghem, Benjamin and Ducasse, St{\'e}phane and Fabry, Johan},
  title = {Spec: A Framework for the Specification and Reuse of UIs and Their
	Models},
  booktitle = {Proceedings of the International Workshop on Smalltalk Technologies},
  year = {2012},
  series = {IWST '12},
  pages = {2:1--2:14},
  address = {New York, NY, USA},
  publisher = {ACM},
  acmid = {2448965},
  articleno = {2},
  doi = {10.1145/2448963.2448965},
  isbn = {978-1-4503-1897-6},
  location = {Ghent, Belgium},
  numpages = {14},
  url = {http://doi.acm.org/10.1145/2448963.2448965}
}

@INCOLLECTION{raey,
  author = {Wadler, Philip},
  title = {Monads for functional programming},
  booktitle = {Advanced Functional Programming},
  publisher = {Springer Berlin Heidelberg},
  year = {1995},
  editor = {Jeuring, Johan and Meijer, Erik},
  volume = {925},
  series = {Lecture Notes in Computer Science},
  pages = {24-52},
  doi = {10.1007/3-540-59451-5_2},
  isbn = {978-3-540-59451-2},
  url = {http://dx.doi.org/10.1007/3-540-59451-5_2}
}

@ARTICLE{Wan:2000:FRP:358438.349331,
  author = {Wan, Zhanyong and Hudak, Paul},
  title = {Functional Reactive Programming from First Principles},
  journal = {SIGPLAN Not.},
  year = {2000},
  volume = {35},
  pages = {242--252},
  number = {5},
  month = may,
  acmid = {349331},
  address = {New York, NY, USA},
  doi = {10.1145/358438.349331},
  issn = {0362-1340},
  issue_date = {May 2000},
  numpages = {11},
  publisher = {ACM},
  url = {http://doi.acm.org/10.1145/358438.349331}
}

@INPROCEEDINGS{Wan:2002:EF:645772.667941,
  author = {Wan, Zhanyong and Taha, Walid and Hudak, Paul},
  title = {Event-Driven FRP},
  booktitle = {Proceedings of the 4th International Symposium on Practical Aspects
	of Declarative Languages},
  year = {2002},
  series = {PADL '02},
  pages = {155--172},
  address = {London, UK, UK},
  publisher = {Springer-Verlag},
  acmid = {667941},
  isbn = {3-540-43092-X},
  numpages = {18},
  url = {http://dl.acm.org/citation.cfm?id=645772.667941}
}

@ARTICLE{LiuH2012,
  author = {刘慧玲 and 陈晓军 and 王申申},
  title = {Prism中的Interaction机制的研究及改进},
  journal = {电脑知识与技术},
  year = {2012},
  volume = {08},
  pages = {5110--5112},
  number = {21},
  abstract = {微软的Prism开源框架,非常适合作为复杂界面程序的框架库.该文对Prism库中的Interaction机制及源码进行了分析,并结合项目实际情况进行了改进,大大简化了其实现过程.},
  doi = {10.3969/j.issn.1009-3044.2012.21.030},
  keywords = {Prism MVVM},
  owner = {trinity},
  timestamp = {2014.05.15},
  url = {http://d.g.wanfangdata.com.cn/Periodical_dnzsyjs-itrzyksb201221030.aspx}
}

@ARTICLE{LiuL2012,
  author = {刘立},
  title = {MVVM模式分析与应用},
  journal = {微型电脑应用},
  year = {2012},
  volume = {28},
  pages = {57--60},
  number = {12},
  abstract = {MVVM模式是自2005年微软WPF和Silverlight架构师John Gossman在其博客中首次提出的,它利用了WPF的XMAL和DataBinding,使软件的架构可以分离成为View、Model和ViewModel
	3层,使数据和界面得到很好的分离,达到软件设计中的“高内聚,低耦合”的目标.和传统的MVC模式相比,MVVM是其在WPF中的演化和升级.以一个幼儿早教学校的客户管理系统为实例,对MVVM模式进行分析,讨论了它的整体构架,对其各个层次进行了解析,讲述其特点,论述了它的工作原理,并将其与传统的MVC模式进行对比,分析两者的异同,阐述了MVVM模式的优势和不足.},
  doi = {10.3969/j.issn.1007-757X.2012.12.017},
  keywords = {MVVM模式 WPF 数据绑定 XAML MVC模式},
  owner = {trinity},
  timestamp = {2014.05.15},
  url = {http://d.g.wanfangdata.com.cn/Periodical_wxdnyy201212017.aspx}
}

@ARTICLE{Zhang2011,
  author = {张建奇 and 李墨翰 and 郑伟},
  title = {基于WPF的工厂物流管理系统界面设计},
  journal = {自动化技术与应用},
  year = {2011},
  volume = {30},
  pages = {17--21},
  number = {12},
  abstract = {为解决传统工厂物流管理系统设计所存在的问题,如:界面不够美观并难以满足一些特殊需求等,介绍了应用微软新一代界面开发技术WPF对工厂物流管理系统进行界面设计.系统采用适用于WPF编程模式的架构MVVM,并通过此项技术实现了工厂物流管理系统界面新颖设计.和传统界面设计技术相比,通过WPF设计的界面,不但可以使用户得到更好的视觉享受,而且更节省CPU资源,系统运行更加流畅.},
  doi = {10.3969/j.issn.1003-7241.2011.12.005},
  keywords = {WPF EB2 MVVM 界面设计},
  owner = {trinity},
  timestamp = {2014.05.15},
  url = {http://d.g.wanfangdata.com.cn/Periodical_hljzdhjsyyy201112005.aspx}
}

@ARTICLE{Lin2012,
  author = {林亚明},
  title = {基于ZK的MVVM与MVP设计模式应用研究},
  journal = {重庆文理学院学报：自然科学版},
  year = {2012},
  volume = {31},
  pages = {72--74,78},
  number = {6},
  abstract = {简要介绍基于ZK框架的RIA系统架构,讨论MVVM设计模式和MVP设计模式在ZK框架中实现的技术特点和应用场合,综合两种设计模式的优点提出了复杂业务系统界面开发的最佳实践,并通过实例给予论证.实例表明,该最佳实践能够应付复杂的界面开发需求,同时保持代码的结构简洁,从而提高系统的维护性.},
  doi = {10.3969/j.issn.1673-8012.2012.06.021},
  keywords = {ZK RIA 设计模式 MVVM MVP ZK RIA design pattern MVVM MVP},
  owner = {trinity},
  timestamp = {2014.05.15},
  url = {http://d.g.wanfangdata.com.cn/Periodical_yxxyxb-z201206021.aspx}
}

@ARTICLE{Jiang2012,
  author = {江雪 and 邵晨龙},
  title = {MVVM设计模式的应用},
  journal = {科学时代},
  year = {2012},
  number = {16},
  abstract = {MVVM是Model-View-ViewModel的缩写，是WPF和Silverlight特有的一种界面设计模式。使用MVVM设计模式可以帮助我们分离业务逻辑，显示逻辑和用户界面，使得我们的程序代码结构清晰，容易被阅读、测试、维护、替换、扩展和改进。},
  keywords = {MVVM 设计模式 应用},
  owner = {trinity},
  timestamp = {2014.05.15},
  url = {http://d.g.wanfangdata.com.cn/Periodical_kxsd201216105.aspx}
}

@ARTICLE{Zhao2010,
  author = {赵劼},
  title = {异步编程与响应式框架},
  journal = {程序员},
  year = {2010},
  pages = {100-103},
  month = {September},
  abstract = {为了降低异步编程的的难度,众多语言提供了对它的支持,响应式编程模型及响应式框架就是其中典型的例子。异步操作是强大的,它是许多高伸缩性架构的基石。},
  keywords = {响应 异步操作 编程语言 框架 编程模型 客户端 事件 辅助方法 迭代器 数据消费者},
  owner = {trinity},
  timestamp = {2014.05.15},
  url = {http://blog.zhaojie.me/2010/09/async-programming-and-reactive-framework.html}
}

@comment{jabref-meta: selector_publisher:}

@comment{jabref-meta: selector_author:}

@comment{jabref-meta: selector_journal:}

@comment{jabref-meta: selector_keywords:}

